[{"/Users/nicolewallace/Documents/projects/react-movie-app/src/App.js":"1","/Users/nicolewallace/Documents/projects/react-movie-app/src/components/SearchBox.js":"2","/Users/nicolewallace/Documents/projects/react-movie-app/src/reportWebVitals.js":"3","/Users/nicolewallace/Documents/projects/react-movie-app/src/components/MovieList.js":"4","/Users/nicolewallace/Documents/projects/react-movie-app/src/index.js":"5","/Users/nicolewallace/Documents/projects/react-movie-app/src/components/RemoveFavorites.js":"6","/Users/nicolewallace/Documents/projects/react-movie-app/src/components/AddFavorites.js":"7","/Users/nicolewallace/Documents/projects/react-movie-app/src/components/MovieListHeading.js":"8","/Users/nicolewallace/Documents/projects/react-movie-app/src/components/NavBar.js":"9"},{"size":3481,"mtime":1611643415081,"results":"10","hashOfConfig":"11"},{"size":360,"mtime":1608075473796,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1608075473797,"results":"13","hashOfConfig":"11"},{"size":3361,"mtime":1611645311995,"results":"14","hashOfConfig":"11"},{"size":501,"mtime":1608075473796,"results":"15","hashOfConfig":"11"},{"size":784,"mtime":1608075473796,"results":"16","hashOfConfig":"11"},{"size":452,"mtime":1609374541641,"results":"17","hashOfConfig":"11"},{"size":177,"mtime":1608075473796,"results":"18","hashOfConfig":"11"},{"size":631,"mtime":1611645976147,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"2fj24v",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"/Users/nicolewallace/Documents/projects/react-movie-app/src/App.js",["40","41","42"],"import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport MovieList from \"./components/MovieList\";\nimport MovieListHeading from './components/MovieListHeading';\n// import SearchBox from './components/SearchBox';\nimport AddFavorites from './components/AddFavorites';\nimport RemoveFavorites from './components/RemoveFavorites'; \nimport NavBar from './components/NavBar'; \n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n\n  // new state to hold favorites -- adding ser clicks to this array \n  const [favorites, setFavorites] = useState([]); \n\n  const [searchValue, setSearchValue] = useState('');\n\n  // calling API -- searchValue as a parameter \n  const getMovieRequest = async (searchValue) => {\n    // const url = `http://www.omdbapi.com/?s=${searchValue}&apikey=50241c2`; // original\n    const url = `https://api.themoviedb.org/3/search/movie?api_key=7b642aed2489a8f6bfc80d04a2421e1c&language=en-US&query=${searchValue}&page=1&include_adult=false`;\n\n    \n    const response = await fetch(url); \n    const responseJson = await response.json(); \n\n    if (responseJson.results) {\n      setMovies(responseJson.results); \n    }\n  };\n\n  // passes new searchValue to our getMovieRequest\n  useEffect(() => {\n    getMovieRequest(searchValue); \n  }, [searchValue]); \n\n  // retrieving favorites from localStorage when app loads and setting to state \n  useEffect(() => {\n    const movieFavorites = JSON.parse(\n      localStorage.getItem('react-movie-app-favorites')\n    ); \n    setFavorites(movieFavorites); \n  }, []); \n\n  // saving to localStorage to remain when page loads \n  const saveToLocalStorage = (items) => {\n    localStorage.setItem('react-movie-app-favorites', JSON.stringify(items));\n  };\n\n  // accepts a movie, takes in the current favorites array, copies it, and adds the new movie and saves back into state \n  const addFavoriteMovie = (movie) => {\n    const newFavoriteList = [...favorites, movie]; \n    setFavorites(newFavoriteList);\n    saveToLocalStorage(newFavoriteList); \n  };\n\n  // remove a given movie from favorite state by filtering ID returning new favorites array\n  const removeFavoriteMovie = (movie) => {\n    const newFavoriteList = favorites.filter(\n      (favorite) => favorite.id !== movie.id\n    ); \n    setFavorites(newFavoriteList); \n    saveToLocalStorage(newFavoriteList); \n  };\n\t\n\treturn (\n    <>\n    <div className=\"app-container\">\n      <NavBar searchValue={searchValue} setSearchValue={setSearchValue} />\n    </div>\n\n\t\t<div className='container-fluid movie-app'>\n\n\t\t\t<div className='row d-flex mt-4 mb-4'>\n\t\t\t\t{/* <MovieListHeading heading='Movies' /> */}\n\t\t\t\t{/* <SearchBox searchValue={searchValue} setSearchValue={setSearchValue} /> */}\n      </div>\n\n      <div className=\"results row d-flex mt-4 mb-4\">\n        <h1>{movies.length ? `Viewing ${movies.length} results` : 'Search A Movie To View Results' }\n        </h1>\n      </div>\n\t\t\t\n\n\t\t\t<div className='row'>\n        <MovieList \n          movies={movies} \n          favoriteComponent={AddFavorites} \n          handleFavoritesClick={addFavoriteMovie}/>\n\t\t\t</div>\n\n      {/* <div className='row d-flex mt-4 mb-4'>\n\t\t\t\t<MovieListHeading heading='Watch List' />\n\t\t\t</div>\n      \n\t\t\t<div className='row'>\n        <MovieList \n          movies={favorites} \n          handleFavoritesClick={removeFavoriteMovie}\n          favoriteComponent={RemoveFavorites} /> \n\t\t\t</div> */}\n\t\t</div>\n    </>\n\t);\n};\n\nexport default App;\n","/Users/nicolewallace/Documents/projects/react-movie-app/src/components/SearchBox.js",[],"/Users/nicolewallace/Documents/projects/react-movie-app/src/reportWebVitals.js",[],"/Users/nicolewallace/Documents/projects/react-movie-app/src/components/MovieList.js",[],"/Users/nicolewallace/Documents/projects/react-movie-app/src/index.js",[],"/Users/nicolewallace/Documents/projects/react-movie-app/src/components/RemoveFavorites.js",[],"/Users/nicolewallace/Documents/projects/react-movie-app/src/components/AddFavorites.js",[],"/Users/nicolewallace/Documents/projects/react-movie-app/src/components/MovieListHeading.js",[],"/Users/nicolewallace/Documents/projects/react-movie-app/src/components/NavBar.js",["43"],"import React from 'react';\n\nconst NavBar = (props) => {\n\treturn (\n        <>\n        <nav class=\"navbar\">\n            <div class=\"container-fluid\">\n                <a class=\"navbar-brand\">Movie App</a>\n                <form class=\"d-flex input-group-lg\">\n                <input class=\"form-control me-2\" \n                type=\"search\" \n                placeholder=\"Find a movie\" \n                aria-label=\"Search\"\n                value={props.value}\n\t\t\t\tonChange={(event) => props.setSearchValue(event.target.value)}></input>\n                </form>\n            </div>\n        </nav>\n      </>\n\t\n\t);\n};\n\nexport default NavBar;\n\n\n",{"ruleId":"44","severity":1,"message":"45","line":5,"column":8,"nodeType":"46","messageId":"47","endLine":5,"endColumn":24},{"ruleId":"44","severity":1,"message":"48","line":8,"column":8,"nodeType":"46","messageId":"47","endLine":8,"endColumn":23},{"ruleId":"44","severity":1,"message":"49","line":59,"column":9,"nodeType":"46","messageId":"47","endLine":59,"endColumn":28},{"ruleId":"50","severity":1,"message":"51","line":8,"column":17,"nodeType":"52","endLine":8,"endColumn":41},"no-unused-vars","'MovieListHeading' is defined but never used.","Identifier","unusedVar","'RemoveFavorites' is defined but never used.","'removeFavoriteMovie' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]